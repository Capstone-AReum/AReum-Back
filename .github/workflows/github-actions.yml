name : AReum-Server CI/CD Pipeline

on:
    push:
        branches: ["dev"]
    pull_request:
        branches: ["main", "dev"]

permissions:
    contents: read

jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v2
            
            - name: Setup docker buildx
              id: buildx
              uses: docker/setup-buildx-action@v1

            - name: Create .env file
              run: |
                echo DB_URL=${{ secrets.DB_URL }} >> .env
                echo DB_USER=${{ secrets.DB_USERNAME }} >> .env
                echo DB_PASS=${{ secrets.DB_PASSWORD }} >> .env
                echo DB_PORT=${{ secrets.DB_PORT }} >> .env
                echo DB_NAME=${{ secrets.DB_NAME }} >> .env

            - name: Docker build and push
              run: |
                echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
                docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} .
                docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}

    deploy:
        needs: build
        name: Deploy
        runs-on: ubuntu-latest
        steps:
            - name: Deploy to EC2
              uses: appleboy/ssh-action@master
              with:
                host: ${{ secrets.EC2_HOST }}
                username: ubuntu
                key: ${{ secrets.EC2_KEY }}
                port: 22
                script: |
                    sudo docker stop areum-server || true
                    sudo docker rm areum-server || true
                    sudo docker image rm ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }} || true
                    sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
                    sudo docker run -d --name areum-server -p 80:80 ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO }}
                    sudo docker image prune -f